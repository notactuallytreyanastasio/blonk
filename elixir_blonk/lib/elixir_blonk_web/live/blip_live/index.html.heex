<div class="max-w-4xl mx-auto px-4 py-8">
  <div class="mb-8">
    <h1 class="text-2xl text-gray-700 mb-6">recent blips on the radar</h1>
  </div>

  <div id="blips" phx-update="stream" class="bg-white border border-gray-200 rounded-lg overflow-hidden">
    <div :for={{dom_id, blip} <- @streams.blips} id={dom_id} class="border-b border-gray-200 last:border-b-0 p-6 hover:bg-gray-50 transition-colors">
      <div class="flex items-start space-x-6">
        <div class="flex flex-col items-center justify-center min-w-[3rem] bg-gray-100 rounded-lg p-3">
          <div class="text-lg font-semibold text-gray-700">
            <%= blip.grooves_looks_good + blip.grooves_shit_rips %>
          </div>
          <div class="text-xs text-gray-500 text-center">
            signal
          </div>
        </div>
        <div class="flex-1">
          <h2 class="text-blue-600 hover:underline mb-2 text-lg font-medium">
            <.link navigate={~p"/blips/#{blip.id}"}><%= blip.title %></.link>
          </h2>
          
          <div :if={blip.body} class="text-gray-700 mb-3 text-sm leading-relaxed">
            <%= blip.body %>
          </div>
          
          <div :if={blip.url} class="mb-3">
            <a href={blip.url} target="_blank" class="text-blue-500 hover:underline text-sm">
              <%= blip.url %>
            </a>
          </div>
          
          <div class="flex items-center space-x-3 text-sm text-gray-500">
            <span class="font-medium">@{get_author_handle(blip)}</span>
            <span>•</span>
            <span>
              <%= 
                hours = DateTime.diff(DateTime.utc_now(), blip.inserted_at, :hour)
                cond do
                  hours < 1 -> "#{DateTime.diff(DateTime.utc_now(), blip.inserted_at, :minute)}m ago"
                  hours < 24 -> "#{hours}h ago"
                  true -> "#{DateTime.diff(DateTime.utc_now(), blip.inserted_at, :day)}d ago"
                end
              %>
            </span>
            <div :if={blip.vibe} class="flex items-center space-x-1">
              <span>•</span>
              <span class="text-blue-600 font-medium"><%= blip.vibe.emoji %> <%= blip.vibe.name %></span>
            </div>
            <div :if={blip.tags && length(blip.tags) > 0} class="flex items-center space-x-1">
              <span>•</span>
              <div class="flex flex-wrap gap-1">
                <span :for={tag <- blip.tags} class="bg-blue-100 text-blue-700 px-2 py-1 rounded text-xs">
                  <%= tag %>
                </span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<.modal :if={@live_action == :new} id="blip-modal" show on_cancel={JS.patch(~p"/")}>
  <.live_component
    module={ElixirBlonkWeb.BlipLive.FormComponent}
    id={@blip.id || :new}
    title="New Blip"
    action={@live_action}
    blip={@blip}
    patch={~p"/"}
  />
</.modal>